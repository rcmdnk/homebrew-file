[project]
name = "brew-file"
version = "9.2.2"
description = "Brewfile manager for Homebrew"
authors = [
  { name = "rcmdnk", email = "rcmdnk@gmail.com" }
]
requires-python = ">=3.9.0"
dependencies = []

[dependency-groups]
dev = [
  "pytest >= 8.3.0",
  "pytest-cov >= 6.0.0",
  "pytest-xdist >= 3.3.1",
  "pyproject-pre-commit[ruff] >= 0.3.0",
]

[project.scripts]
brew-file = "brew_file.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "-n auto"
testpaths = ["tests",]

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = ["ALL"]
# select = ["E4", "E7", "E9", "F"]  # default, black compatible
#select = [  # similar options to black, flake8 + plugins, isort etc...)
#  #"E4",  # Import (comparable to black)
#  #"E7",  # Indentation (comparable to black)
#  #"E9",  # Blank line (comparable to black)
#  "F",   # String (comparable to black)
#  "I",   # Import order (comparable to isort)
#  "S",   # flake8-bandit (comparable to bandit)
#  "B",   # flake8-bugbear
#  "A",   # flake8-builtins
#  "C4",   # flake8-comprehensions
#  "T10",  # flake8-debugger
#  "EXE",  # flake8-executable
#  "T20", # flake8-print
#  "N", # pep8-naming
#  "E", # pycodestyle
#  "W", # pycodestyle
#  "C90", # mccabe
#]

ignore = [
 "E501", # Line too long. Disable it to allow long lines of comments and print lines which black allows.
 "D100", "D102", "D103", "D104", "D105", "D106", "D107", # Missing docstrings other than class (D101)
 "D203", # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible. Ignoring `one-blank-line-before-class`.
 "D212", # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible. Ignoring `multi-line-summary-second-line`.
 "C901", # Complex function
 "S603", # `subprocess` call: check for execution of untrusted input
 "S607", # Starting a process with a partial executable path
 "COM812", "ISC001", # The following rules may cause conflicts when used with the formatter: `COM812`, `ISC001`. To avoid unexpected behavior, we recommend disabling these rules, either by removing them from the `select` or `extend-select` configuration, or adding them to the `ignore` configuration.
 "ERA001", # Remove commented-out code
 "G004", # Logging statement uses f-string
 "SLOT000", # Subclasses of `str` should define `__slots__`
 "FBT001", "FBT002", "FBT003", # Boolean-typed positional argument in function definition
 "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR2004",
 "TCH001", "TCH003", # Move standard library import into a type-checking block
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101", "S603", "S607", "C901", "FBT001", "FBT003", "ARG001", "ARG005"]
"docs/**" = ["ALL"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.black]
line-length = 79

[tool.autoflake]
remove-all-unused-imports = true
expand-star-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.autopep8]
ignore = "E203,E501,W503"
recursive = true
aggressive = 3

[tool.isort]
profile = "black"
line_length = 79

[tool.flake8]
# E203 is not PEP8 compliant and black insert space around slice: [Frequently Asked Questions - Black 22.12.0 documentation](https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated)
# E501: Line too long. Disable it to allow long lines of comments and print lines which black allows.
# W503 is the counter part of W504, which follows current PEP8: [Line break occurred before a binary operator (W503)](https://www.flake8rules.com/rules/W503.html)
# D100~D106: Missing docstrings other than class (D101)
# D401: First line should be in imperative mood
ignore = "E203,E501,W503,D100,D102,D103,D104,D105,D106,D401"
#max-complexity = 10
#max-annotations-complexity=4
docstring-convention = "numpy"

[tool.bandit]
exclude_dirs = ["tests"]
# B404: import subprocess -> until fixing w/o subprocess
# B603: subprocess_without_shell_equals_true-> until fixing w/o subprocess, difficult to manage multi arguments especially for arguments including quotes with shell=True
# B607: start_process_with_partial_path: until fixing w/o subprocess, difficult to run fixed path on multi environments
skips = ["B404", "B603", "B607"]

[tool.mypy]
files = ["bin/brew-file", "src/**/*.py"]
strict = true
warn_return_any = false
ignore_missing_imports = true
scripts_are_modules = true
install_types = true
non_interactive = true

[tool.numpydoc_validation]
checks = [
    "all",   # report on all checks, except the below
    "EX01",  # "No examples section found"
    "ES01",  # "No extended summary found"
    "SA01",  # "See Also section not found"
    "GL08",  # "The object does not have a docstring"
    "PR01",  # "Parameters {missing_params} not documented"
    "RT01",  # "No Returns section found"
]
