name: pristine-homebrew

description: Setup pristine Homebrew and cache it

inputs:
  os:
    description: Runner OS (used in the cache key)
    required: true
  restore:
    description: Restore a cached pristine Homebrew
    required: false
    default: "true"

env:
  CACHE_PATHS:

runs:
  using: composite
  steps:
    - name: Build path list and check brew version
      id: brew
      shell: bash
      run: |
        prefix="$(brew --prefix)"
        {
          echo "CACHE_PATHS<<EOF"
          echo "$prefix/bin"
          echo "$prefix/etc"
          echo "$prefix/include"
          echo "$prefix/lib"
          echo "$prefix/opt"
          echo "$prefix/sbin"
          echo "$prefix/share"
          echo "$prefix/var"
          echo "$prefix/Library/Taps"
          echo "EOF"
        } >> $GITHUB_ENV
        echo prefix=$(brew --prefix) >> "$GITHUB_OUTPUT"
        echo version=$(brew --version | sed -e '1s/[<>:"\/\\|?* \t]/_/g' -e '2,$d') >> "$GITHUB_OUTPUT"
    - name: Cache lookup
      id: cache_lookup
      uses: actions/cache/restore@v4
      with:
        lookup-only: true
        path: |
          ${{ steps.brew.outputs.prefix }}/bin
          ${{ steps.brew.outputs.prefix }}/etc
          ${{ steps.brew.outputs.prefix }}/etc
          ${{ steps.brew.outputs.prefix }}/lib
          ${{ steps.brew.outputs.prefix }}/opt
          ${{ steps.brew.outputs.prefix }}/sbin
          ${{ steps.brew.outputs.prefix }}/share
          ${{ steps.brew.outputs.prefix }}/var
          ${{ steps.brew.outputs.prefix }}/Library/Taps
        key: brew-pristine-${{ inputs.os }}-${{ github.ref_name }}-${{ steps.brew.outputs.version }}
    - name: Remove current Homebrew directories
      if: inputs.restore == 'true' && steps.cache_lookup.outputs.cache-hit == 'true'
      shell: bash
      run: |
        while read -r d; do
          rm -rf "$d"
        done <<<"${{ env.CACHE_PATHS }}"
    - name: Restore pristine Homebrew
      id: cache_restore
      if: inputs.restore == 'true' && steps.cache_lookup.outputs.cache-hit == 'true'
      uses: actions/cache/restore@v4
      with:
        path: |
          ${{ steps.brew.outputs.prefix }}/bin
          ${{ steps.brew.outputs.prefix }}/etc
          ${{ steps.brew.outputs.prefix }}/etc
          ${{ steps.brew.outputs.prefix }}/lib
          ${{ steps.brew.outputs.prefix }}/opt
          ${{ steps.brew.outputs.prefix }}/sbin
          ${{ steps.brew.outputs.prefix }}/share
          ${{ steps.brew.outputs.prefix }}/var
          ${{ steps.brew.outputs.prefix }}/Library/Taps
        key: brew-pristine-${{ inputs.os }}-${{ github.ref_name }}-${{ steps.brew.outputs.version }}
    - name: Make Homebrew pristine
      if: steps.cache_lookup.outputs.cache-hit != 'true'
      shell: bash
      run: |
        set -euo pipefail

        formulae=()
        while IFS= read -r f; do
          formulae+=("$f")
        done < <(brew list --formula)
        if [ "${#formulae[@]}" -gt 0 ]; then
          brew uninstall --formula --force "${formulae[@]}"
        fi

        casks=()
        while IFS= read -r c; do
          casks+=("$c")
        done < <(brew list --cask)
        if [ "${#casks[@]}" -gt 0 ]; then
          brew uninstall --cask --zap --force "${casks[@]}"
        fi

        taps=()
        while IFS= read -r t; do
          taps+=("$t")
        done < <(brew tap)
        if [ "${#taps[@]}" -gt 0 ]; then
          brew untap "${taps[@]}"
        fi
    - name: Save pristine Homebrew
      if: steps.cache_lookup.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: |
          ${{ steps.brew.outputs.prefix }}/bin
          ${{ steps.brew.outputs.prefix }}/etc
          ${{ steps.brew.outputs.prefix }}/etc
          ${{ steps.brew.outputs.prefix }}/lib
          ${{ steps.brew.outputs.prefix }}/opt
          ${{ steps.brew.outputs.prefix }}/sbin
          ${{ steps.brew.outputs.prefix }}/share
          ${{ steps.brew.outputs.prefix }}/var
          ${{ steps.brew.outputs.prefix }}/Library/Taps
        key: brew-pristine-${{ inputs.os }}-${{ github.ref_name }}-${{ steps.brew.outputs.version }}
    - name: Remove brew download cache
      if: inputs.restore == 'true'
      shell: bash
      run: |
        rm -rf "$(brew --cache)" || true
