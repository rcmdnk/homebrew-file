name: test

on: [push, pull_request]

jobs:
  install:
    strategy:
      matrix:
        os: [macos-12, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install test
        run: |
          curl -o install.sh -fsSL https://raw.github.com/rcmdnk/homebrew-file/install/install.sh
          chmod 755 ./install.sh
          ./install.sh
          rm -f install.sh
  test:
    strategy:
      matrix:
        os: [macos-12, ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
          architecture: x64
      - name: Homebrew installation
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      - uses: BSFishy/pip-action@v1
        with:
          packages: |
            pre-commit
            pytest
            pytest-cov
      - name: Run test
        continue-on-error: true
        run: pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=bin  tests/ | tee pytest-coverage.txt
      - name: Pytest coverage comment
        if: ${{ github.ref == 'refs/heads/main' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      - name: Create Variable of Summary Report
        id: summary_report
        run: |
          SUMMARY_REPORT=${{ steps.coverageComment.outputs.summaryReport }}
          echo "::set-output name=content::$SUMMARY_REPORT"
      - name: Check the output coverage
        run: |
          echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
          echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
          echo "Summary Report - ${{ steps.coverageComment.outputs.summaryReport }}"
          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"
          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"
      - name: pre-commit
        continue-on-error: true
        run: pre-commit run -a
